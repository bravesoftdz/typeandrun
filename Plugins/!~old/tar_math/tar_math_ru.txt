Название: Математический плагин для TypeAndRun.
Версия: 1.5
Автор: -=GaLaN=- (Evgeniy Galantsev)

Возможности:
Позволяет проводить вычисления выражений любой сложности прямо в консоли программы.

Пример:
(2+2)*2=<ENTER>
Появится текст в консоли:
(2+2)*2=8
Причем ответ будет выделен, его можно скопировать в буфер обмена, можно его стереть и исправить выражение, и так далее.

Тонкости:
- Регистр букв НЕВАЖЕН
- Разрешается использовать пробелы
- Десятичная часть должна быть отделена точкой (а не запятой)
- Выражение должно быть записано по обычным правилам записи мат. выражений для компьютера. (Например: x^2+sin(5*y)/exp(4*z) )
- Плагин учитывает приоритет действий (в порядке убывания: вычисление функций, взятие в степень, умножение и деление, сложение и вычитание)
- Плагин учитывает скобки
- Плагин знает следующие мат. операции:
	+ : сложение
	- : вычитание
	/ : деление
	* : умножение
	^ : возведение в произвольную степень
- Плагин знает следующие мат. функции:
	sin     - синус
	cos     - косинус
	tan     - тангенс
	cot     - котангенс
	exp     - экспонента
	ln      - нат. логарифм
	sqr     - квадрат
	sqrt    - квадратный корень
	round   - округление
	trunc   - целая часть
	asin    - арксинус
	acos    - арккосинус
	atan    - арктангенс
	acot    - арккотангенс
	sinh    - гип. синус
	cosh    - гип. косинус
	tanh    - гип. тангенс
	coth    - гип. котангенс
- Плагин знает следующие числовые константы:
	pi  - число пи
	e   - число е
- Плагин понимает только числа, представленные в десятичном виде

Настройки плагина хранятся в tar_math.ini:
[General]
SelectAnswer - выделять ли консоли ответ (1 - по умолчанию)
CopyToClipboard - копировать ли ответ в буфер обмена (1 - по умолчанию)
UseEqual - использовать ли символ "=" для распознания выражения (1 - по умолчанию)
UseOriginal - использовать ли оригинальное выражение в ответе (1 - по умолчанию)
Round - использовать ли округление в ответе (1 - по умолчанию)
RoundLimit - округлять сколько знаков после запятой (13 - по умолчанию): от 1 до 13

Плагин использует возможности модуля FunctionParser, поэтому исполняем желание его автора, приводя ниже его лицензию:
======================================================================
Данный юнит и представленные в нем классы и методы, а также алгоритм
распознавания функций являются интеллектуальной собственностью
ЩЕГЛОВА ИЛЬИ АЛЕКСАНДРОВИЧА <franzy@comail.ru>.
Данные класс, его методы и алгоритм распространяются бесплатно для
некоммерческого использования. Какое-либо другое распространение
указанной информации с целью получения выгоды запрещено. Использование
класса, его методов или алгоритма распознавания в программах,
распространяемых комерческим путем, возможно только с письменного
разрешения названного выше владельца авторского права.
======================================================================
Приношу благодарность Илье за такой замечательный алгоритм и искренне надеюсь, что ничего из лиценции не нарушено. ;)


История:
[+] Новая фича
[*] Пофиксен баг
[-] Убрана фича

Версия 1.0 - 27.10.03
[+] Первая рабочая версия плагина

Версия 1.1 - 13.11.03
[-] Убрано ограничение на 255 символов в формуле

Версия 1.2 - 23.11.03
[*] Исправлен баг с некорректным выводом дробного результата

Версия 1.3 - 20.01.04
[*] В буфер обмена копировалось все выражение, а не только нужный ответ
[+] Возможность не использовать символ '=' в выражении
[+] Возможность не выводить оригинальное выражение (оно все равно может остаться в истории) в ответе
[*] Несмотря на то, что в выражении требуется использовать точку, в ответе использовалась запятая

Версия 1.4 - 05.12.04
[*] Несколько незначительных исправлений
[*] Убрано сохранение конфига по выходе - ибо зачем это делать, если он и так правится ручками

Версия 1.5 - 07.12.04
[*] Делая предыдущие исправления, допустил обидный баг. Теперь он исправлен. :)

Версия 1.6 - 02.01.05
[+] Добавлена возможность округлять ответ до определенного знака после занятой, но не более 13. К сожалению, бОльшая точность недоступна.